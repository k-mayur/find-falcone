{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/Error/Error.js","store/utility.js","store/reducers/planet.js","store/reducers/vehicle.js","Store.js","store/actions/actionTypes.js","components/Home/Home.js","store/actions/planet.js","store/actions/vehicle.js","components/Result/Result.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","this","props","name","react_router_dom","to","data-test","React","Component","withRouter","footer","href","error","style","textAlign","fontSize","fontWeight","updateObject","oldObject","updatedValues","Object","objectSpread","loading","initialState","planets","result","redirect","loding","updateResult","state","data","vehicles","updatedVehicles","time","updateTimeAndCount","prevState","assign","objV","selectedV","forEach","el","undefined","console","log","copy","map","e","updatedVeh","veh","total_no","newTime","v","i","filter","planet","selectedP","distance","speed","reduce","b","rootReducer","combineReducers","arguments","length","action","type","payload","vehicle","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Home","planet1","planet2","planet3","planet4","vehicle1","vehicle2","vehicle3","vehicle4","resetHandle","n","_this$setState","document","getElementById","concat","innerHTML","_this","setState","defineProperty","resetHandler","findHandle","preventDefault","values","includes","swal","planetNames","vehicleNames","push","loadingOn","findHandler","selectedPlanets","tempA","m","options","selectedIndex","value","selectedVehicles","querySelector","populateVehicles","planetName","target","planetDistance","selectedPlanet","max_distance","radioClick","checked","getData","getPlanets","getVehicles","componentDidMount","componentDidUpdate","history","_this2","_this$props$planet","planetsDropdown","key","dropdowns","id1","id2","onChange","id","onClick","vehiclesList","color","onSubmit","alignSelf","margin","connect","dispatch","axios","post","headers","Accept","then","res","token","planet_names","vehicle_names","Content-Type","catch","err","get","getState","Result","resetRedirect","msg","status","planet_name","App","components_Header_Header","react_router","path","component","exact","Error","Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","es","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.753eb6c3.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport \"./Header.css\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <div className=\"header-text\">\n          <h2>Finding {this.props.name}</h2>\n        </div>\n        <div className=\"header-btn\">\n          <Link to=\"/\">\n            <button data-test=\"homeBtn\" className=\"btn\">\n              Home\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst footer = props => {\n  return (\n    <div className=\"footer\">\n      <h4>\n        Coding problem{\" \"}\n        <a data-test=\"footerLink\" href=\"https://www.geektrust.in/\">\n          geektrust.in/finding-falcone\n        </a>{\" \"}\n      </h4>\n    </div>\n  );\n};\n\nexport default footer;\n","import React from \"react\";\n\nconst error = props => {\n  return (\n    <div style={{ textAlign: \"center\", fontSize: \"2em\", fontWeight: \"bold\" }}>\n      Invalid Address : URL doesn't Exist.\n    </div>\n  );\n};\n\nexport default error;\n","export const updateObject = (oldObject, updatedValues) => {\n  return {\n    ...oldObject,\n    ...updatedValues,\n    loading: false\n  };\n};\n","import {\n  GET_PLANETS,\n  FIND_RESULT,\n  RESET_REDIRECT,\n  RESET,\n  LOADING\n} from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  planets: [],\n  result: {},\n  redirect: false,\n  loding: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PLANETS:\n      return updateObject(state, { planets: action.payload });\n    case FIND_RESULT:\n      return updateResult(state, action.payload);\n    case RESET_REDIRECT:\n      return { ...state, redirect: false };\n    case RESET:\n      return { ...state, result: {}, redirect: false };\n    case LOADING:\n      return { ...state, loading: true };\n    default:\n      return state;\n  }\n}\n\nconst updateResult = (state, data) => {\n  return {\n    ...state,\n    result: data,\n    redirect: true,\n    loading: false\n  };\n};\n","import {\n  GET_VEHICLES,\n  UPDATE_TIME,\n  RESET_TIME,\n  RESET\n} from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  vehicles: [],\n  updatedVehicles: [],\n  time: 0\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_VEHICLES:\n      return updateObject(state, {\n        vehicles: action.payload,\n        updatedVehicles: action.payload\n      });\n    case UPDATE_TIME:\n      return updateTimeAndCount(state, action.payload);\n    case RESET_TIME:\n      return { ...state, time: 0 };\n    case RESET:\n      return { ...state, updatedVehicles: state.vehicles, time: 0 };\n    default:\n      return state;\n  }\n}\n\nconst updateTimeAndCount = (state, data) => {\n  const prevState = Object.assign({}, state);\n  let objV = {};\n  data.selectedV.forEach(el => {\n    if (el !== undefined) {\n      if (objV[el]) {\n        objV[el]++;\n      } else {\n        objV[el] = 1;\n      }\n    }\n  });\n  console.log(objV, prevState.vehicles);\n\n  const copy = prevState.vehicles.map(e => Object.assign({}, e));\n\n  console.log(copy);\n  const updatedVeh = copy.map(veh => {\n    if (objV[veh.name]) {\n      veh.total_no = veh.total_no - objV[veh.name];\n    }\n    return veh;\n  });\n  console.log(updatedVeh);\n  const newTime = data.selectedV\n    .map((v, i) => {\n      if (v !== undefined) {\n        const dis = data.planets.filter(\n          planet => planet.name === data.selectedP[i]\n        )[0].distance;\n        const speed = prevState.vehicles.filter(veh => veh.name === v)[0].speed;\n        return dis / speed;\n      } else {\n        return null;\n      }\n    })\n    .reduce((a, b) => a + b);\n\n  return {\n    ...state,\n    updatedVehicles: updatedVeh,\n    time: newTime\n  };\n};\n","import thunk from \"redux-thunk\";\nimport planetReducer from \"./store/reducers/planet\";\nimport vehicleReducer from \"./store/reducers/vehicle\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\n\nconst rootReducer = combineReducers({\n  planet: planetReducer,\n  vehicle: vehicleReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","export const GET_PLANETS = \"GET_PLANETS\";\nexport const GET_VEHICLES = \"GET_VEHICLES\";\nexport const UPDATE_TIME = \"UPDATE_TIME\";\nexport const FIND_RESULT = \"FIND_RESULT\";\nexport const RESET_REDIRECT = \"RESET_REDIRECT\";\nexport const RESET_TIME = \"RESET_TIME\";\nexport const RESET = \"RESET\";\nexport const LOADING = \"LOADING\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  findHandler,\n  getPlanets,\n  resetHandler,\n  loadingOn\n} from \"../../store/actions/planet\";\nimport { getVehicles, updateTimeAndCount } from \"../../store/actions/vehicle\";\nimport \"./Home.css\";\nimport swal from \"@sweetalert/with-react\";\n\nclass Home extends React.Component {\n  state = {\n    planet1: \"\",\n    planet2: \"\",\n    planet3: \"\",\n    planet4: \"\",\n    vehicle1: undefined,\n    vehicle2: undefined,\n    vehicle3: undefined,\n    vehicle4: undefined\n  };\n\n  resetHandle = () => {\n    let tempA = [1, 2, 3, 4];\n    tempA.forEach(n => {\n      document.getElementById(`d${n}`).innerHTML = \"\";\n      this.setState({ [`planet${n}`]: \"\", [`vehicle${n}`]: undefined });\n    });\n    this.props.resetHandler();\n  };\n\n  findHandle = e => {\n    e.preventDefault();\n    if (\n      Object.values(this.state).includes(\"\") ||\n      Object.values(this.state).includes(undefined)\n    ) {\n      swal(\n        <div>\n          <h1>Inputs Missing!</h1>\n          <p>Please enter all valid inputs.</p>\n        </div>\n      );\n    } else {\n      const tempA = [1, 2, 3, 4];\n      const planetNames = [];\n      const vehicleNames = [];\n      tempA.forEach(n => {\n        planetNames.push(this.state[`planet${n}`]);\n        vehicleNames.push(this.state[`vehicle${n}`]);\n      });\n      this.props.loadingOn();\n      this.props.findHandler(planetNames, vehicleNames);\n    }\n  };\n\n  selectedPlanets = n => {\n    let tempA = [1, 2, 3, 4];\n    tempA = tempA.filter(m => m !== n);\n    return tempA.map(n => {\n      let e = document.getElementById(`s${n}`);\n      return e.options[e.selectedIndex].value;\n    });\n  };\n\n  selectedVehicles = n => {\n    let tempA = [1, 2, 3, 4];\n    tempA = tempA.filter(m => m !== n);\n    return tempA.map(n => {\n      const el = document.querySelector(`input[name = \"${n}\"]:checked`);\n      if (el !== null) {\n        return el.value;\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n  populateVehicles = (n, e) => {\n    const planetName = e.target.value;\n    let planetDistance = \"\";\n    if (planetName !== \"\") {\n      const selectedPlanet = this.selectedPlanets(n);\n      console.log(selectedPlanet);\n      if (selectedPlanet.includes(planetName)) {\n        e.target.value = this.state[`planet${n}`];\n        swal(\n          <div>\n            <h1>Planet Already Selected!</h1>\n            <p>Please select another planet. </p>\n          </div>\n        );\n        return;\n      } else {\n        planetDistance = this.props.planet.planets.filter(\n          planet => planet.name === planetName\n        )[0].distance;\n      }\n    }\n    if (planetDistance !== \"\") {\n      document.getElementById(`d${n}`).innerHTML = \"\";\n      this.props.vehicle.vehicles.map(vehicle => {\n        if (vehicle.max_distance >= planetDistance) {\n          const radios = (document.getElementById(`d${n}`).innerHTML +=\n            '<span><input type=\"radio\" id=\"' +\n            vehicle.name +\n            n +\n            '\" name=\"' +\n            n +\n            '\" value=\"' +\n            vehicle.name +\n            '\" /><label for=\"' +\n            vehicle.name +\n            n +\n            '\">' +\n            vehicle.name +\n            \"</label></span>\");\n\n          return radios;\n        } else {\n          return null;\n        }\n      });\n    }\n    const selectedV = this.selectedVehicles(n);\n    const selectedP = this.selectedPlanets(n);\n    this.props.updateTimeAndCount(selectedP, selectedV);\n    this.setState({ [`planet${n}`]: e.target.value });\n    this.setState({ [`vehicle${n}`]: undefined });\n  };\n\n  radioClick = e => {\n    const veh = e.target.value;\n    const n = e.target.name;\n    if (veh !== undefined) {\n      const availVeh = this.props.vehicle.updatedVehicles.filter(\n        v => v.name === veh\n      )[0].total_no;\n      if (availVeh <= 0) {\n        const el = document.querySelector(`input[name = \"${n}\"]:checked`);\n        if (el !== null && this.state[`vehicle${n}`] !== undefined) {\n          document.getElementById(\n            `${this.state[`vehicle${n}`]}${n}`\n          ).checked = true;\n          swal(\n            <div>\n              <h1>Vehicle Not Available! </h1>\n              <p>Please select another vehicle.</p>\n            </div>\n          );\n          return;\n        } else {\n          document.getElementById(`${veh}${n}`).checked = false;\n        }\n        swal(\n          <div>\n            <h1>Vehicle Not Available! </h1>\n            <p>Please select another vehicle.</p>\n          </div>\n        );\n        this.setState({ [`vehicle${n}`]: undefined });\n        return;\n      } else {\n        const selectedV = this.selectedVehicles(n);\n        const selectedP = this.selectedPlanets(n);\n        this.props.updateTimeAndCount(selectedP, selectedV);\n      }\n      this.setState({ [`vehicle${n}`]: veh });\n    }\n  };\n\n  getData = () => {\n    this.props.getPlanets();\n    this.props.getVehicles();\n  };\n  componentDidMount = () => {\n    this.props.loadingOn();\n    this.getData();\n  };\n\n  componentDidUpdate = () => {\n    let { redirect } = this.props.planet;\n    if (redirect === true) {\n      this.props.history.push(\"/result\");\n    }\n  };\n\n  render() {\n    const { planets, loading } = this.props.planet;\n\n    if (loading) {\n      return (\n        <div>\n          <div className=\"loader\">Loading...</div>\n        </div>\n      );\n    } else {\n      const planetsDropdown = planets.map((planet, i) => {\n        return (\n          <option key={i} value={planet.name}>\n            {planet.name}\n          </option>\n        );\n      });\n\n      const tempArr = [1, 2, 3, 4];\n      const dropdowns = tempArr.map(i => {\n        let id1 = `s${i}`;\n        let id2 = `d${i}`;\n        return (\n          <div key={i} className=\"planet-wrap\">\n            <select\n              className=\"planet-dropdown\"\n              onChange={e => this.populateVehicles(i, e)}\n              id={id1}\n              value={this.state[`planet${i}`]}\n            >\n              <option value=\"\">select planet {i}</option>\n              {planetsDropdown}\n            </select>\n            <div\n              className=\"planet-vehicles\"\n              id={id2}\n              onClick={this.radioClick}\n            />\n          </div>\n        );\n      });\n\n      const vehiclesList = this.props.vehicle.updatedVehicles.map(\n        (vehicle, i) => {\n          return (\n            <span key={i}>\n              {vehicle.name} :{\" \"}\n              <span style={{ color: \"darkred\", fontSize: \"1.2em\" }}>\n                {vehicle.total_no}\n              </span>{\" \"}\n              &nbsp;\n            </span>\n          );\n        }\n      );\n      return (\n        <div className=\"home\">\n          <div className=\"home-options\">\n            <h4 style={{ textAlign: \"center\" }}>\n              Select planets you want to search in :\n            </h4>\n            <div className=\"vlist\">\n              <span className=\"vlist-title\">Available Vehicles :</span>\n              <div className=\"vlist-content\">{vehiclesList}</div>\n            </div>\n            <form\n              className=\"home-form\"\n              data-test=\"findForm\"\n              onSubmit={this.findHandle}\n            >\n              <span className=\"planets-wrap\">{dropdowns}</span>\n\n              <button\n                className=\"btn\"\n                type=\"submit\"\n                style={{ alignSelf: \"center\", margin: \"30px\" }}\n              >\n                Find Falcone\n              </button>\n            </form>\n            <button\n              data-test=\"resetBtn\"\n              className=\"btn pos-abs\"\n              onClick={this.resetHandle}\n            >\n              Reset\n            </button>\n          </div>\n          <div className=\"home-time\">\n            <h4>\n              Time taken :{\" \"}\n              <span style={{ color: \"darkred\" }}>\n                {this.props.vehicle.time}\n              </span>{\" \"}\n            </h4>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  vehicle: state.vehicle,\n  planet: state.planet\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    findHandler,\n    getPlanets,\n    getVehicles,\n    updateTimeAndCount,\n    resetHandler,\n    loadingOn\n  }\n)(Home);\n","import axios from \"axios\";\nimport {\n  GET_PLANETS,\n  FIND_RESULT,\n  RESET_REDIRECT,\n  RESET_TIME,\n  RESET,\n  LOADING\n} from \"./actionTypes\";\n\nexport const getPlanets = () => dispatch => {\n  axios\n    .get(\"https://findfalcone.herokuapp.com/planets\")\n    .then(planets => {\n      dispatch({\n        type: GET_PLANETS,\n        payload: planets.data\n      });\n    })\n    .catch(err => console.log(err));\n};\n\nexport const findHandler = (planetNames, vehicleNames) => dispatch => {\n  axios\n    .post(\"https://findfalcone.herokuapp.com/token\", null, {\n      headers: {\n        Accept: \"application/json\"\n      }\n    })\n    .then(res => {\n      const data = {\n        token: res.data.token,\n        planet_names: planetNames,\n        vehicle_names: vehicleNames\n      };\n      const config = {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      axios\n        .post(\"https://findfalcone.herokuapp.com/find\", data, config)\n        .then(res => {\n          dispatch({\n            type: FIND_RESULT,\n            payload: res.data\n          });\n        })\n        .catch(err => console.log(err));\n    })\n    .catch(err => console.log(err));\n};\n\nexport const resetRedirect = () => dispatch => {\n  dispatch({\n    type: RESET_REDIRECT\n  });\n  dispatch({\n    type: RESET_TIME\n  });\n};\n\nexport const resetHandler = () => dispatch => {\n  dispatch({\n    type: RESET\n  });\n};\n\nexport const loadingOn = () => dispatch => {\n  dispatch({\n    type: LOADING\n  });\n};\n","import axios from \"axios\";\nimport { GET_VEHICLES, UPDATE_TIME } from \"./actionTypes\";\n\nimport store from \"../../Store\";\n\nexport const getVehicles = () => dispatch => {\n  axios\n    .get(\"https://findfalcone.herokuapp.com/vehicles\")\n    .then(vehicles => {\n      dispatch({\n        type: GET_VEHICLES,\n        payload: vehicles.data\n      });\n    })\n    .catch(err => console.log(err));\n};\n\nexport const updateTimeAndCount = (selectedP, selectedV) => dispatch => {\n  const planets = store.getState().planet.planets;\n  dispatch({\n    type: UPDATE_TIME,\n    payload: { selectedP, selectedV, planets }\n  });\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { resetRedirect } from \"../../store/actions/planet\";\nimport \"./Result.css\";\n\nclass Result extends React.Component {\n  componentWillUnmount() {\n    this.props.resetRedirect();\n  }\n  render() {\n    let msg = \"Falcone was not found on any of the planet you selected.\";\n    let planet = \"She could be anywhere on the remaining planet.\";\n    if (this.props.planet.result.status === \"success\") {\n      msg = \"Congratulations! You found Falcone. King Shan is mighty pleased.\";\n      planet = `She was hiding on ${this.props.planet.result.planet_name}.`;\n    }\n    return (\n      <div className=\"result\">\n        <h3>{msg}</h3>\n        <p>{planet}</p>\n        <p>Time taken : {this.props.vehicle.time}</p>\n        <button\n          className=\"btn\"\n          onClick={() => {\n            this.props.history.push(\"/\");\n          }}\n        >\n          Try Again\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  vehicle: state.vehicle,\n  planet: state.planet\n});\n\nexport default connect(\n  mapStateToProps,\n  { resetRedirect }\n)(Result);\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Error from \"./components/Error/Error\";\nimport Home from \"./components/Home/Home\";\nimport Result from \"./components/Result/Result\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    name: \"Falcone\"\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Header name={this.state.name} />\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/result\" component={Result} exact />\n            <Route component={Error} />\n          </Switch>\n          <Footer />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}