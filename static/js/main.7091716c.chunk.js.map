{"version":3,"sources":["services/httpService.js","store/helper.js","store/reducers/planet.js","store/reducers/vehicle.js","store/Store.js","store/actions/actionTypes.js","store/actions/planet.js","components/Header/Header.js","components/Footer/Footer.js","components/Error/Error.js","components/Radios/Radios.js","store/actions/vehicle.js","components/Dropdown/Dropdown.js","components/Home/Home.js","components/Result/Result.js","App.js","index.js"],"names":["globalUrl","headers","Accept","Content-Type","httpService","get","api","axios","catch","err","console","log","post","data","updateState","oldState","updatedValues","Object","objectSpread","loading","initialState","planets","result","redirect","loding","token","updateResult","state","vehicles","updatedVehicles","selectedPlanets","selectedVehicles","time","numPlanetsAllowed","updateSelectedPlanets","planetObj","planetName","planetNumber","assign","timeAndCount","updateTimeAndCount","timeTaken","updateSelectedVehicles","vehicleObj","vehicleName","prevState","_loop","i","distance","find","planet","name","speed","vehicle","map","values","includes","count","filter","veh","length","total_no","rootReducer","combineReducers","arguments","undefined","action","type","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","resetHandler","dispatch","Header","react_default","a","createElement","className","this","props","react_router_dom","to","data-test","onClick","React","Component","connect","withRouter","footer","href","error","style","textAlign","fontSize","fontWeight","Radios","event","target","value","_this$props","_this","preventDefault","swal","pl","max_distance","checked","_this2","_this$props$vehicle","display","radios","key","id","e","htmlFor","getState","Dropdown","planetsDropdown","index","dropdowns","push","onChange","components_Radios_Radios","Home","findHandle","findHandler","getData","getPlanets","getVehicles","setToken","componentDidMount","componentDidUpdate","history","onSubmit","components_Dropdown_Dropdown","alignSelf","margin","color","planetNames","vehicleNames","planet_names","vehicle_names","then","response","Result","tryAgainHandler","resetRedirect","msg","status","concat","planet_name","App","components_Header_Header","react_router","path","component","exact","Error","Footer_Footer","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7091716c.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst globalUrl = \"https://findfalcone.herokuapp.com\";\nconst headers = {\n  Accept: \"application/json\",\n  \"Content-Type\": \"application/json\"\n};\n\nconst httpService = {\n  get: api => {\n    return axios\n      .get(globalUrl + api, null, { headers })\n      .catch(err => console.log(err));\n  },\n  post: (api, data) => {\n    return axios\n      .post(globalUrl + api, data, { headers })\n      .catch(err => console.log(err));\n  }\n};\n\nexport default httpService;\n","export const updateState = (oldState, updatedValues) => {\n  return {\n    ...oldState,\n    ...updatedValues,\n    loading: false\n  };\n};\n\n// export const dispatchAction = (type, payload) => dispatch => {\n//   dispatch({\n//     type: type,\n//     payload: payload\n//   });\n// };\n","import {\n  GET_PLANETS,\n  FIND_RESULT,\n  RESET_REDIRECT,\n  RESET,\n  LOADING,\n  SET_TOKEN\n} from \"../actions/actionTypes\";\nimport { updateState } from \"../helper\";\n\nconst initialState = {\n  planets: [],\n  result: {},\n  redirect: false,\n  loding: false,\n  token: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PLANETS:\n      return updateState(state, { planets: action.payload });\n    case FIND_RESULT:\n      return updateResult(state, action.payload);\n    case SET_TOKEN:\n      return { ...state, token: action.payload };\n    case RESET_REDIRECT:\n      return { ...state, redirect: false };\n    case RESET:\n      return { ...state, result: {}, redirect: false };\n    case LOADING:\n      return { ...state, loading: true };\n    default:\n      return state;\n  }\n}\n\nconst updateResult = (state, data) => {\n  return {\n    ...state,\n    result: data,\n    redirect: true,\n    loading: false\n  };\n};\n","import {\n  GET_VEHICLES,\n  UPDATE_PLANETS,\n  RESET,\n  UPDATE_VEHICLES\n} from \"../actions/actionTypes\";\nimport { updateState } from \"../helper\";\n\nconst initialState = {\n  vehicles: [],\n  updatedVehicles: [],\n  selectedPlanets: [],\n  selectedVehicles: [],\n  time: 0,\n  // number of planets you can send vehicles to\n  numPlanetsAllowed: 4\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_VEHICLES:\n      return updateState(state, {\n        vehicles: action.payload,\n        updatedVehicles: action.payload\n      });\n    case UPDATE_PLANETS:\n      return updateSelectedPlanets(state, action.payload);\n    case UPDATE_VEHICLES:\n      return updateSelectedVehicles(state, action.payload);\n    case RESET:\n      return {\n        ...state,\n        updatedVehicles: state.vehicles,\n        time: 0,\n        selectedPlanets: [],\n        selectedVehicles: []\n      };\n    default:\n      return state;\n  }\n}\n\nconst updateSelectedPlanets = (state, planetObj) => {\n  let selectedVehicles = state.selectedVehicles;\n\n  const { planetName, planetNumber, planets } = planetObj;\n\n  let selectedPlanets = Object.assign({}, state.selectedPlanets);\n\n  if (planetName === \"\") {\n    delete selectedVehicles[planetNumber - 1];\n  }\n  selectedPlanets[planetNumber - 1] = planetName;\n\n  const timeAndCount = updateTimeAndCount(\n    state,\n    selectedPlanets,\n    selectedVehicles,\n    planets\n  );\n  return {\n    ...state,\n    selectedPlanets: selectedPlanets,\n    time: timeAndCount.timeTaken,\n    updatedVehicles: timeAndCount.updatedVehicles,\n    selectedVehicles: selectedVehicles\n  };\n};\n\nconst updateSelectedVehicles = (state, vehicleObj) => {\n  let selectedPlanets = state.selectedPlanets;\n  const { vehicleName, planetNumber, planets } = vehicleObj;\n  let selectedVehicles = Object.assign({}, state.selectedVehicles);\n  selectedVehicles[planetNumber - 1] = vehicleName;\n  const timeAndCount = updateTimeAndCount(\n    state,\n    selectedPlanets,\n    selectedVehicles,\n    planets\n  );\n  return {\n    ...state,\n    selectedVehicles: selectedVehicles,\n    time: timeAndCount.timeTaken,\n    updatedVehicles: timeAndCount.updatedVehicles\n  };\n};\n\nconst updateTimeAndCount = (\n  state,\n  selectedPlanets,\n  selectedVehicles,\n  planets\n) => {\n  const prevState = Object.assign({}, state);\n  let timeTaken = 0;\n  for (let i = 0; i < prevState.numPlanetsAllowed; i++) {\n    if (\n      selectedPlanets[i] !== \"\" &&\n      selectedPlanets[i] &&\n      selectedVehicles[i]\n    ) {\n      const distance = planets.find(\n        planet => planet.name === selectedPlanets[i]\n      ).distance;\n      const speed = prevState.vehicles.find(\n        vehicle => vehicle.name === selectedVehicles[i]\n      ).speed;\n      timeTaken += distance / speed;\n    }\n  }\n  const vehiclesArray = prevState.vehicles.map(vehicle =>\n    Object.assign({}, vehicle)\n  );\n\n  const updatedVehicles = vehiclesArray.map(vehicle => {\n    if (Object.values(selectedVehicles).includes(vehicle.name)) {\n      let count = Object.values(selectedVehicles).filter(\n        veh => veh === vehicle.name\n      ).length;\n      vehicle.total_no -= count;\n    }\n    return vehicle;\n  });\n  return { timeTaken, updatedVehicles };\n};\n","import thunk from \"redux-thunk\";\nimport planetReducer from \"./reducers/planet\";\nimport vehicleReducer from \"./reducers/vehicle\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\n\nconst rootReducer = combineReducers({\n  planet: planetReducer,\n  vehicle: vehicleReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","export const GET_PLANETS = \"GET_PLANETS\";\nexport const GET_VEHICLES = \"GET_VEHICLES\";\nexport const UPDATE_PLANETS = \"UPDATE_PLANETS\";\nexport const FIND_RESULT = \"FIND_RESULT\";\nexport const RESET_REDIRECT = \"RESET_REDIRECT\";\nexport const RESET = \"RESET\";\nexport const LOADING = \"LOADING\";\nexport const UPDATE_VEHICLES = \"UPDATE_VEHICLES\";\nexport const SET_TOKEN = \"SET_TOKEN\";\n","import {\n  GET_PLANETS,\n  FIND_RESULT,\n  RESET_REDIRECT,\n  RESET,\n  LOADING,\n  SET_TOKEN\n} from \"./actionTypes\";\nimport httpService from \"../../services/httpService\";\nimport store from \"../Store\";\n\nexport const getPlanets = () => dispatch => {\n  httpService.get(\"/planets\").then(planets => {\n    dispatch({\n      type: GET_PLANETS,\n      payload: planets.data\n    });\n  });\n};\n\nexport const setToken = () => dispatch => {\n  httpService.post(\"/token\", null).then(response => {\n    dispatch({\n      type: SET_TOKEN,\n      payload: response.data.token\n    });\n  });\n};\n\nexport const findHandler = (planetNames, vehicleNames) => dispatch => {\n  const data = {\n    token: store.getState().planet.token,\n    planet_names: planetNames,\n    vehicle_names: vehicleNames\n  };\n  httpService.post(\"/find\", data).then(response => {\n    dispatch({\n      type: FIND_RESULT,\n      payload: response.data\n    });\n  });\n};\n\nexport const resetRedirect = () => dispatch => {\n  dispatch({\n    type: RESET_REDIRECT\n  });\n};\n\nexport const resetHandler = () => dispatch => {\n  dispatch({\n    type: RESET\n  });\n};\n\nexport const loading = () => dispatch => {\n  dispatch({\n    type: LOADING\n  });\n};\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { resetHandler } from \"../../store/actions/planet\";\nimport \"./Header.css\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <div className=\"header-text\">\n          <h2>Finding {this.props.name}</h2>\n        </div>\n        <div className=\"header-btn\">\n          <Link to=\"/\">\n            <button\n              data-test=\"homeBtn\"\n              className=\"btn\"\n              onClick={this.props.resetHandler}\n            >\n              Home\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { resetHandler }\n)(withRouter(Header));\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst footer = props => {\n  return (\n    <div className=\"footer\">\n      <h4>\n        Coding problem{\" \"}\n        <a data-test=\"footerLink\" href=\"https://www.geektrust.in/\">\n          geektrust.in/finding-falcone\n        </a>{\" \"}\n      </h4>\n    </div>\n  );\n};\n\nexport default footer;\n","import React from \"react\";\n\nconst error = props => {\n  return (\n    <div style={{ textAlign: \"center\", fontSize: \"2em\", fontWeight: \"bold\" }}>\n      Invalid Address : URL doesn't Exist.\n    </div>\n  );\n};\n\nexport default error;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateSelectedVehicles } from \"../../store/actions/vehicle\";\nimport swal from \"@sweetalert/with-react\";\n\nclass Radios extends React.Component {\n  updateSelectedVehicles = (event, planetNumber) => {\n    const vehicleName = event.target.value;\n    const { planet, vehicle } = this.props;\n    if (\n      vehicle.updatedVehicles.find(veh => veh.name === vehicleName).total_no <=\n      0\n    ) {\n      event.preventDefault();\n      return swal(\n        <div>\n          <h1>Vehicle not Available!</h1>\n          <p>Please select another vehicle.</p>\n        </div>\n      );\n    } else if (\n      planet.planets.find(\n        pl => pl.name === vehicle.selectedPlanets[planetNumber - 1]\n      ).distance >\n      vehicle.vehicles.find(veh => veh.name === vehicleName).max_distance\n    ) {\n      event.preventDefault();\n      return swal(\n        <div>\n          <h1>Vehicle not Reachable!</h1>\n          <p>Please select another vehicle.</p>\n        </div>\n      );\n    } else {\n      if (vehicleName !== undefined) {\n        this.props.updateSelectedVehicles(vehicleName, planetNumber);\n      }\n    }\n  };\n\n  render() {\n    const { updatedVehicles, selectedPlanets } = this.props.vehicle;\n    const { planetNumber } = this.props;\n    const planet = selectedPlanets[planetNumber - 1];\n    let style;\n    let checked;\n    if (planet === \"\" || !planet) {\n      style = { display: \"none\" };\n      checked = false;\n    } else {\n      style = {};\n    }\n\n    let radios = updatedVehicles.map((vehicle, i) => {\n      const name = vehicle.name;\n      return (\n        <span key={i}>\n          <input\n            type=\"radio\"\n            name={planetNumber}\n            value={name}\n            id={name + planetNumber}\n            checked={checked}\n            onClick={e => this.updateSelectedVehicles(e, planetNumber)}\n          />\n          <label htmlFor={name + planetNumber}>\n            {name + \" (\" + vehicle.total_no + \")\"}\n          </label>\n        </span>\n      );\n    });\n    return (\n      <div className=\"planet-vehicles\" style={style}>\n        {radios}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  vehicle: state.vehicle,\n  planet: state.planet\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateSelectedVehicles }\n)(Radios);\n","import { GET_VEHICLES, UPDATE_PLANETS, UPDATE_VEHICLES } from \"./actionTypes\";\nimport httpService from \"../../services/httpService\";\nimport store from \"../Store\";\n\nexport const getVehicles = () => dispatch => {\n  httpService.get(\"/vehicles\").then(vehicles => {\n    dispatch({\n      type: GET_VEHICLES,\n      payload: vehicles.data\n    });\n  });\n};\n\nexport const updateSelectedPlanets = (planetName, planetNumber) => dispatch => {\n  const planets = store.getState().planet.planets;\n  dispatch({\n    type: UPDATE_PLANETS,\n    payload: { planetName, planetNumber, planets }\n  });\n};\n\nexport const updateSelectedVehicles = (\n  vehicleName,\n  planetNumber\n) => dispatch => {\n  const planets = store.getState().planet.planets;\n  dispatch({\n    type: UPDATE_VEHICLES,\n    payload: { vehicleName, planetNumber, planets }\n  });\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Radios from \"../Radios/Radios\";\nimport { updateSelectedPlanets } from \"../../store/actions/vehicle\";\nimport swal from \"@sweetalert/with-react\";\n\nclass Dropdown extends React.Component {\n  updateSelectedPlanets = (planetNumber, event) => {\n    const planetName = event.target.value;\n    const { selectedPlanets } = this.props.vehicle;\n    if (planetName !== \"\") {\n      if (Object.values(selectedPlanets).includes(planetName)) {\n        return swal(\n          <div>\n            <h1>Planet Already Selected!</h1>\n            <p>Please select another planet.</p>\n          </div>\n        );\n      }\n    }\n    this.props.updateSelectedPlanets(planetName, planetNumber);\n  };\n\n  render() {\n    const { planets } = this.props.planet;\n    const { selectedPlanets } = this.props.vehicle;\n    const planetsDropdown = planets.map((planet, index) => {\n      return (\n        <option key={index} value={planet.name}>\n          {planet.name}\n        </option>\n      );\n    });\n    let dropdowns = [];\n    for (let i = 0; i < this.props.vehicle.numPlanetsAllowed; i++) {\n      const planetNumber = i + 1;\n      dropdowns.push(\n        <div key={i} className=\"planet-wrap\">\n          <select\n            className=\"planet-dropdown\"\n            onChange={e => this.updateSelectedPlanets(planetNumber, e)}\n            value={selectedPlanets[i] ? selectedPlanets[i] : \"\"}\n          >\n            <option value=\"\">select planet {planetNumber}</option>\n            {planetsDropdown}\n          </select>\n          <div />\n          <Radios planetNumber={planetNumber} />\n        </div>\n      );\n    }\n    return <div className=\"planets-wrap\">{dropdowns}</div>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  vehicle: state.vehicle,\n  planet: state.planet\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateSelectedPlanets }\n)(Dropdown);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  findHandler,\n  getPlanets,\n  resetHandler,\n  loading,\n  setToken\n} from \"../../store/actions/planet\";\nimport { getVehicles } from \"../../store/actions/vehicle\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport \"./Home.css\";\nimport swal from \"@sweetalert/with-react\";\n\nclass Home extends React.Component {\n  findHandle = e => {\n    e.preventDefault();\n    const { selectedPlanets, selectedVehicles } = this.props.vehicle;\n    for (let i = 0; i < this.props.vehicle.numPlanetsAllowed; i++) {\n      if (\n        !selectedPlanets[i] ||\n        selectedPlanets[i] === \"\" ||\n        !selectedVehicles[i]\n      ) {\n        return swal(\n          <div>\n            <h1>Inputs Missing!</h1>\n            <p>Please enter all valid inputs.</p>\n          </div>\n        );\n      }\n    }\n    const planets = Object.values(selectedPlanets);\n    const vehicles = Object.values(selectedVehicles);\n    this.props.loading();\n    this.props.findHandler(planets, vehicles);\n  };\n\n  getData = () => {\n    this.props.getPlanets();\n    this.props.getVehicles();\n    this.props.setToken();\n  };\n  componentDidMount = () => {\n    this.props.loading();\n    this.getData();\n  };\n\n  componentDidUpdate = () => {\n    let { redirect } = this.props.planet;\n    if (redirect === true) {\n      this.props.history.push(\"/result\");\n    }\n  };\n\n  render() {\n    const { time } = this.props.vehicle;\n    const { loading } = this.props.planet;\n    if (loading) {\n      return (\n        <div>\n          <div className=\"loader\">Loading...</div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"home\">\n          <div className=\"home-options\">\n            <h4 style={{ textAlign: \"center\" }}>\n              Select planets you want to search in :\n            </h4>\n            <form\n              className=\"home-form\"\n              data-test=\"findForm\"\n              onSubmit={this.findHandle}\n            >\n              <Dropdown />\n              <button\n                className=\"btn\"\n                type=\"submit\"\n                style={{ alignSelf: \"center\", margin: \"30px\" }}\n              >\n                Find Falcone\n              </button>\n            </form>\n            <button\n              data-test=\"resetBtn\"\n              className=\"btn pos-abs\"\n              onClick={this.props.resetHandler}\n            >\n              Reset\n            </button>\n          </div>\n          <div className=\"home-time\">\n            <h4>\n              Time taken : <span style={{ color: \"darkred\" }}>{time}</span>{\" \"}\n            </h4>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  vehicle: state.vehicle,\n  planet: state.planet\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    findHandler,\n    getPlanets,\n    getVehicles,\n    resetHandler,\n    loading,\n    setToken\n  }\n)(Home);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { resetRedirect, resetHandler } from \"../../store/actions/planet\";\nimport \"./Result.css\";\n\nclass Result extends React.Component {\n  componentWillUnmount() {\n    this.props.resetRedirect();\n  }\n  tryAgainHandler = () => {\n    this.props.history.push(\"/\");\n    this.props.resetHandler();\n  };\n  render() {\n    let msg = \"Falcone was not found on any of the planet you selected.\";\n    let planet = \"She could be anywhere on the remaining planet.\";\n    if (this.props.planet.result.status === \"success\") {\n      msg = \"Congratulations! You found Falcone. King Shan is mighty pleased.\";\n      planet = `She was hiding on ${this.props.planet.result.planet_name}.`;\n    }\n    return (\n      <div className=\"result\">\n        <h3>{msg}</h3>\n        <p>{planet}</p>\n        <p>Time taken : {this.props.vehicle.time}</p>\n        <button className=\"btn\" onClick={this.tryAgainHandler}>\n          Try Again\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  vehicle: state.vehicle,\n  planet: state.planet\n});\n\nexport default connect(\n  mapStateToProps,\n  { resetRedirect, resetHandler }\n)(Result);\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Error from \"./components/Error/Error\";\nimport Home from \"./components/Home/Home\";\nimport Result from \"./components/Result/Result\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    name: \"Falcone\"\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Header name={this.state.name} />\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/result\" component={Result} exact />\n            <Route component={Error} />\n          </Switch>\n          <Footer />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/Store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}